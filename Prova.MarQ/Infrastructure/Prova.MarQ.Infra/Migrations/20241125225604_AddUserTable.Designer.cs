// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prova.MarQ.Infra;

#nullable disable

namespace Prova.MarQ.Infra.Migrations
{
    [DbContext(typeof(ProvaMarqDbContext))]
    [Migration("20241125225604_AddUserTable")]
    partial class AddUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Prova.MarQ.Domain.Entities.Clocking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ClockIn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ClockOut")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeePin")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeePin");

                    b.ToTable("Clocking");
                });

            modelBuilder.Entity("Prova.MarQ.Domain.Entities.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyDocument")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompanyDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("CompanyId");

                    b.HasIndex("CompanyDocument")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Prova.MarQ.Domain.Entities.Employee", b =>
                {
                    b.Property<string>("EmployeePin")
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeDocument")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEmployeeDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeePin");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeDocument")
                        .IsUnique();

                    b.HasIndex("EmployeePin")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Prova.MarQ.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.HasIndex("UserName", "Role")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("Prova.MarQ.Domain.Entities.Clocking", b =>
                {
                    b.HasOne("Prova.MarQ.Domain.Entities.Employee", "Employee")
                        .WithMany("Clocking")
                        .HasForeignKey("EmployeePin");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Prova.MarQ.Domain.Entities.Employee", b =>
                {
                    b.HasOne("Prova.MarQ.Domain.Entities.Company", "Company")
                        .WithMany("Employee")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Prova.MarQ.Domain.Entities.Company", b =>
                {
                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Prova.MarQ.Domain.Entities.Employee", b =>
                {
                    b.Navigation("Clocking");
                });
#pragma warning restore 612, 618
        }
    }
}
